/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/filtr-generale.js":
/*!**********************************!*\
  !*** ./src/js/filtr-generale.js ***!
  \**********************************/
/***/ (() => {

var filtrOptionsVision = function filtrOptionsVision() {
  var filtrTitle = document.querySelectorAll('.js-filtr-title');
  var filtrItemOptions = document.querySelectorAll('.filtr-item__options');
  if (!filtrTitle.length) return;
  filtrTitle.forEach(function (item) {
    item.addEventListener('click', function (e) {
      item.nextElementSibling.classList.toggle('active');
      if (item.children[1]) item.children[1].classList.toggle('active');
    });
  });

  // document.addEventListener( 'click', (e) => {
  //     filtrTitle.forEach((item) => {
  //         const itemNo = e.composedPath().includes(item);
  //         if (!itemNo) {
  //             item.nextElementSibling.classList.remove('active');
  //             if (item.children[1])  item.children[1].classList.remove('active');
  //         }
  //     });
  // });

  document.addEventListener('keydown', function (e) {
    if (e.keyCode == 27) {
      filtrTitle.forEach(function (item) {
        item.nextElementSibling.classList.remove('active');
        if (item.children[1]) item.children[1].classList.remove('active');
      });
    }
  });
  filtrItemOptions.forEach(function (item) {
    var filtrOptions = item.querySelectorAll('.filtr-option');
    filtrOptions.forEach(function (elem) {
      elem.addEventListener('click', function (e) {
        // console.dir(elem.dataset.value);
        elem.parentElement.previousElementSibling.children[0].innerText = e.target.innerText;
        optionsChecked(filtrOptions);
        elem.children[1].classList.add('active');
        Cookies.set('glcSort', elem.dataset.value);
      });
    });
  });
};
filtrOptionsVision();
function optionsChecked(options) {
  options.forEach(function (elem) {
    elem.children[1].classList.remove('active');
  });
}
function optionsName(name) {
  var options = {
    'Рекомендованные': 'recommended',
    'Сначала дешевые': 'min_price',
    'Сначала дорогие': 'max_price'
  };
  return options[name];
}

/***/ }),

/***/ "./src/js/filtr-render.js":
/*!********************************!*\
  !*** ./src/js/filtr-render.js ***!
  \********************************/
/***/ (() => {

function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
var locationsArchive = function locationsArchive(glempAll) {
  var regionItem = document.querySelector('.filtr-item.region');
  if (!regionItem) return;
  var locObj = [];
  glempAll.forEach(function (item) {
    var locItem = {
      location: item.location,
      location_id: item.location_id,
      location_slug: item.location_slug
    };
    locObj.push(locItem);
  });
  locObj = removeDuplicates(locObj);
  locObj.sort(function (a, b) {
    return a.location.localeCompare(b.location);
  });
  if (locObj.length) {
    regionItem.children[1].innerHTML = '';
    locObj.forEach(function (item) {
      regionItem.children[1].insertAdjacentHTML("beforeend", "<li>\n                    <input type=\"checkbox\" id=\"".concat(item.location_id, "\" name=\"").concat(item.location, "\" data-name=\"region\" value=\"\">\n                    <label for=\"").concat(item.location_id, "\">\n                        <span class=\"checkmark fcheckbox\">\n                            <svg width=\"12\" height=\"12\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n                                <path d=\"M438.6 105.4C451.1 117.9 451.1 138.1 438.6 150.6L182.6 406.6C170.1 419.1 149.9 419.1 137.4 406.6L9.372 278.6C-3.124 266.1-3.124 245.9 9.372 233.4C21.87 220.9 42.13 220.9 54.63 233.4L159.1 338.7L393.4 105.4C405.9 92.88 426.1 92.88 438.6 105.4H438.6z\"></path>\n                            </svg>\n                        </span>\n                        <span class=\"name\">").concat(item.location, "</span>\n                        <span class=\"count\">1</span>\n                    </label>\n                </li>"));
    });
  }
};
locationsArchive(JSON.parse(glamping_club_ajax.glAll));
var filtrTypeArchive = function filtrTypeArchive(glempAll) {
  var regionItem = document.querySelector('.filtr-item.type');
  if (!regionItem) return;
  var typObj = [];
  if (glempAll.length > 1) {
    glempAll.forEach(function (item) {
      typObj = typObj.concat(item.type);
    });
    typObj = makeUniqSort(typObj);
  } else {
    typObj = arr[0].type;
  }
  if (typObj.length) {
    regionItem.children[1].innerHTML = '';
    typObj.forEach(function (item) {
      var itemName = '';
      if (item == 'glamping') {
        itemName = 'Глэмпинг';
      } else if (item == 'eco_hotel') {
        itemName = 'Эко-отель';
      } else if (item == 'camp_site') {
        itemName = 'Турбаза';
      } else if (item == 'private_sector') {
        itemName = 'Частный сектор';
      }
      var res = glempAll.filter(function (elem) {
        return elem.type == item;
      });
      regionItem.children[1].insertAdjacentHTML("beforeend", "<li>\n                    <input type=\"checkbox\" id=\"".concat(item, "\" name=\"").concat(itemName, "\" data-name=\"type\" value=\"\">\n                    <label for=\"").concat(item, "\">\n                        <span class=\"checkmark fcheckbox\">\n                            <svg width=\"12\" height=\"12\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\">\n                                <path d=\"M438.6 105.4C451.1 117.9 451.1 138.1 438.6 150.6L182.6 406.6C170.1 419.1 149.9 419.1 137.4 406.6L9.372 278.6C-3.124 266.1-3.124 245.9 9.372 233.4C21.87 220.9 42.13 220.9 54.63 233.4L159.1 338.7L393.4 105.4C405.9 92.88 426.1 92.88 438.6 105.4H438.6z\"></path>\n                            </svg>\n                        </span>\n                        <span class=\"name\">").concat(itemName, "</span>\n                        <span class=\"count\">").concat(res.length, "</span>\n                    </label>\n                    <span></span>\n                </li>"));
    });
  }
};
filtrTypeArchive(JSON.parse(glamping_club_ajax.glAll));
function removeDuplicates(arr) {
  var locationsById = function () {
    return arr.reduce(function (acc, n) {
      var _n$location_id, _acc$_n$location_id;
      return ((_acc$_n$location_id = acc[_n$location_id = n.location_id]) !== null && _acc$_n$location_id !== void 0 ? _acc$_n$location_id : acc[_n$location_id] = []).push(n), acc;
    }, {});
  }(arr);
  function getRandom(val) {
    return val[Math.floor(Math.random() * val.length)];
  }
  return Object.values(locationsById).map(getRandom);
}
function itemsChange() {
  var filtrItems = document.querySelector('.glampings-filtr-items');
  filtrItems.addEventListener('click', function (event) {
    var inputs = filtrItems.querySelectorAll('input');
    var input = event.target.closest('input');
    if (input) {
      console.dir(itemsVal(inputs));
    }
  });
}
itemsChange();
function itemsVal(inputs) {
  var inputChecked = [];
  inputs.forEach(function (input) {
    if (input.checked == true) {
      inputChecked.push(input);
    }
  });
  return inputChecked;
}
function countOption(arr) {
  var count = arr.filter(function (elem) {
    if ([5, 6].includes(elem.location_id)) {
      return true;
    }
  });
  return count;
}
function makeUniq(arr) {
  return _toConsumableArray(new Set(arr));
}
function makeUniqSort(arr) {
  return _toConsumableArray(new Set(arr)).sort();
}
function makeUniqNum(arr) {
  return _toConsumableArray(new Set(arr)).sort(function (a, b) {
    return a - b;
  });
}

/***/ }),

/***/ "./src/js/generale.js":
/*!****************************!*\
  !*** ./src/js/generale.js ***!
  \****************************/
/***/ (() => {

function navScroll(elementId) {
  var masthead = document.getElementById(elementId);
  var asideContent = document.getElementById('aside-content');
  var prevScrollpos = window.pageYOffset;
  window.onscroll = function () {
    var currentScrollPos = window.pageYOffset;
    if (prevScrollpos > currentScrollPos) {
      var headHeight = masthead.offsetHeight + 20;
      masthead.style.top = "0";
      if (asideContent) {
        asideContent.style.top = headHeight + "px";
      }
    } else {
      if (prevScrollpos > masthead.offsetHeight) {
        //clientHeight
        masthead.style.top = '-' + masthead.offsetHeight + 'px';
      }
      if (asideContent) {
        asideContent.style.top = '24px';
      }
    }
    prevScrollpos = currentScrollPos;
  };
}
navScroll('masthead');
function asideScroll(elementId, header) {
  var asideContent = document.getElementById(elementId);
  var headerDiv = document.getElementById(header);
  var prevScroll = window.pageYOffset;
  window.onscroll = function () {
    var currentScroll = window.pageYOffset;
    if (prevScroll > currentScroll) {
      asideContent.style.top = headerDiv.offsetHeight + "px";
    } else {
      asideContent.style.top = '24px';
    }
    prevScroll = currentScroll;
  };
}
// asideScroll('aside-content', 'masthead');

function dashboardHeight(headerId, tabsTd) {
  var dashboardHead = document.getElementById(headerId);
  var tabs = document.getElementById(tabsTd);
  if (dashboardHead && tabs) {
    var logo = document.getElementById('dashboard-logo');
    var sidebarContent = document.getElementById('dashboard-sidebar-content');
    var ha = dashboardHead.offsetHeight;
    var h = "calc(100vh - ".concat(ha, "px)");
    tabs.style.height = h;
    sidebarContent.style.height = h;
    logo.style.height = "".concat(ha, "px");
    window.addEventListener('resize', function () {
      ha = dashboardHead.offsetHeight;
      h = "calc(100vh - ".concat(ha, "px)");
      tabs.style.height = h;
      sidebarContent.style.height = h;
      logo.style.height = "".concat(ha, "px");
    });
  }
}
dashboardHeight('dashboard-header', 'dashboard-tabs');
function dashboardHeightPlus(headerId, footerId, tabsTd) {
  var dashboardHead = document.getElementById(headerId);
  var dashboardFooter = document.getElementById(footerId);
  var tabs = document.getElementById(tabsTd);
  if (dashboardHead && dashboardFooter && tabs) {
    var ha = dashboardHead.offsetHeight + dashboardFooter.offsetHeight;
    var h = "calc(100vh - ".concat(ha, "px)");
    tabs.style.height = h;
    window.addEventListener('resize', function () {
      h = "calc(100vh - ".concat(ha, "px)");
      tabs.style.height = h;
    });
  }
}
// dashboardHeightPlus('masthead', 'dashboard-colophon', 'dashboard-tabs');

var sidebarNavVision = function sidebarNavVision() {
  btnSidebarNav = document.querySelector('#js-sidebar-nav');
  if (btnSidebarNav) {
    sidebarNav = document.querySelector('.sidebar-nav');
    overlay = document.querySelector('.js-overlay-modal');
    close = document.querySelector('#js-close');
    body = document.querySelector('body');
    btnSidebarNav.addEventListener('click', function (e) {
      overlay.classList.toggle('active');
      sidebarNav.classList.toggle('active');
      body.classList.toggle('js-overlay');
    });
    overlay.addEventListener('click', function () {
      sidebarNav.classList.remove('active');
      this.classList.remove('active');
      body.classList.remove('js-overlay');
    });
    document.body.addEventListener('keyup', function (e) {
      var key = e.keyCode;
      if (key == 27) {
        sidebarNav.classList.remove('active');
        overlay.classList.remove('active');
        body.classList.remove('js-overlay');
      }
      ;
    }, false);
    close.addEventListener('click', function () {
      sidebarNav.classList.remove('active');
      overlay.classList.remove('active');
      body.classList.remove('js-overlay');
    });
  }
};
sidebarNavVision();
var sidebarDashboardVision = function sidebarDashboardVision() {
  btnSidebarNav = document.querySelector('#js-sidebar-nav-dashboard');
  if (btnSidebarNav) {
    sidebarNav = document.querySelector('#dashboard-sidebar');
    overlay = document.querySelector('.js-overlay-modal');
    close = document.querySelector('#js-dashboard-close');
    body = document.querySelector('body');
    btnSidebarNav.addEventListener('click', function (e) {
      overlay.classList.toggle('active');
      sidebarNav.classList.toggle('active');
      body.classList.toggle('js-overlay');
    });
    overlay.addEventListener('click', function () {
      sidebarNav.classList.remove('active');
      this.classList.remove('active');
      body.classList.remove('js-overlay');
    });
    document.body.addEventListener('keyup', function (e) {
      var key = e.keyCode;
      if (key == 27) {
        sidebarNav.classList.remove('active');
        overlay.classList.remove('active');
        body.classList.remove('js-overlay');
      }
      ;
    }, false);
    close.addEventListener('click', function () {
      sidebarNav.classList.remove('active');
      overlay.classList.remove('active');
      body.classList.remove('js-overlay');
    });
  }
};
sidebarDashboardVision();
var filtrVision = function filtrVision() {
  btnfiltrVision = document.querySelector('#js-filtr-vision');
  if (btnfiltrVision) {
    filtr = document.querySelector('.filtr-items');
    close = document.querySelector('#js-filtr-close');
    body = document.querySelector('body');
    btnfiltrVision.addEventListener('click', function (e) {
      filtr.classList.toggle('active');
      body.classList.toggle('js-overlay');
    });
    document.body.addEventListener('keyup', function (e) {
      var key = e.keyCode;
      if (key == 27) {
        filtr.classList.remove('active');
        body.classList.remove('js-overlay');
      }
      ;
    }, false);
    close.addEventListener('click', function () {
      filtr.classList.remove('active');
      body.classList.remove('js-overlay');
    });
  }
};
// filtrVision();

var searchVision = function searchVision() {
  btnsearchVision = document.querySelector('#js-search-vision');
  if (btnsearchVision) {
    search = document.querySelector('.header-generale__form');
    btnsearchVision.addEventListener('click', function (e) {
      search.classList.toggle('active');
      btnsearchVision.classList.toggle('active');
    });
    document.body.addEventListener('keyup', function (e) {
      var key = e.keyCode;
      if (key == 27) {
        search.classList.remove('active');
        btnsearchVision.classList.remove('active');
      }
      ;
    }, false);
  }
};
searchVision();

// jQuery
jQuery(document).ready(function ($) {
  function scrollToTop(pxShow, scrollSpeed) {
    // pxShow - height on which the button will show
    // scrollSpeed - how slow / fast you want the button to scroll to top.
    $(window).scroll(function () {
      if ($(window).scrollTop() >= pxShow) {
        $(".btn-to-top").addClass('visible');
        $(".request-call").addClass('btn-top-vision');
      } else {
        $(".btn-to-top").removeClass('visible');
        $(".request-call").removeClass('btn-top-vision');
      }
    });
    $('a.scroll-to-top').on('click', function () {
      $('html, body').animate({
        scrollTop: 0
      }, scrollSpeed);
      return false;
    });
  }
  scrollToTop(400, 400);
  function scrollAnimate() {
    $(document).on('click', 'a.animate-scroll[href^="#"]', function (event) {
      event.preventDefault();
      //var indent = $($.attr(this, 'href')).attr('data-top');
      var indent = $(this).attr('data-top');
      if (indent) {
        indent_top = indent;
      } else {
        indent_top = 0;
      }
      if ($($.attr(this, 'href')).length > 0) {
        $('html, body').animate({
          scrollTop: $($.attr(this, 'href')).offset().top - indent_top
        }, 500);
      }
    });
  }
  scrollAnimate();

  // // magnificPopup
  // function mfpInit( index ) {
  //     $('.gallery-'+index).magnificPopup({
  //         type: 'image',
  //         delegate: '.mfp',
  //         tClose: 'Закрыть (Esc)',
  //         tLoading: 'Загрузка...',
  //         gallery:{
  //             enabled: true,
  //             tPrev: 'Назад',
  //             tNext: 'Вперед',
  //             tCounter: '%curr% из %total%'
  //         },
  //         image: {
  //             tError: '<a href="%url%">Изображение</a> не удалось загрузить.'
  //         },
  //         ajax: {
  //             tError: '<a href="%url%">Запрос</a> не выполнен.'
  //         }
  //     });
  // }
  // mfpInit('1');
  // mfpInit('2');
  // mfpInit('3');
  // mfpInit('4');
  // mfpInit('5');
  // mfpInit('6');
  // mfpInit('7');
  // mfpInit('8');
  // mfpInit('9');
  // mfpInit('10');
  // mfpInit('11');
  // mfpInit('12');
  // mfpInit('13');
  // mfpInit('14');
  // mfpInit('15');
  // mfpInit('16');
  // mfpInit('17');
  // mfpInit('18');
  // mfpInit('19');
  // mfpInit('20');
  // mfpInit('all');
  //
  // $('.popup-youtube, .popup-vimeo, .popup-gmaps').magnificPopup({
  // 	disableOn: 700,
  // 	type: 'iframe',
  // 	mainClass: 'mfp-fade',
  //     tClose: 'Закрыть (Esc)',
  // 	removalDelay: 160,
  // 	preloader: false,
  //     fixedContentPos: true,
  //     fixedBgPos: true,
  //     overflowY: 'hidden',
  //     // callbacks: {
  //     //     open: function() {
  //     //
  //     //     },
  //     //     close: function() {
  //     //
  //     //     }
  //     // }
  // });
  //
  // $('.image-popup-fit-width').magnificPopup({
  // 	type: 'image',
  // 	closeOnContentClick: true,
  // 	image: {
  // 		verticalFit: false
  // 	}
  // });
  //
  // $('.image-popup-vertical-fit').magnificPopup({
  // 	type: 'image',
  // 	closeOnContentClick: true,
  // 	mainClass: 'mfp-img-mobile',
  // 	image: {
  // 		verticalFit: true
  // 	}
  //
  // });
});

/***/ }),

/***/ "./src/js/popups.js":
/*!**************************!*\
  !*** ./src/js/popups.js ***!
  \**************************/
/***/ (() => {

// Модальные окна
!function (e) {
  "function" != typeof e.matches && (e.matches = e.msMatchesSelector || e.mozMatchesSelector || e.webkitMatchesSelector || function (e) {
    for (var t = this, o = (t.document || t.ownerDocument).querySelectorAll(e), n = 0; o[n] && o[n] !== t;) ++n;
    return Boolean(o[n]);
  }), "function" != typeof e.closest && (e.closest = function (e) {
    for (var t = this; t && 1 === t.nodeType;) {
      if (t.matches(e)) return t;
      t = t.parentNode;
    }
    return null;
  });
}(window.Element.prototype);
document.addEventListener('DOMContentLoaded', function () {
  var modalButtons = document.querySelectorAll('.js-open-modal'),
    overlay = document.querySelector('.js-overlay-modal'),
    closeButtons = document.querySelectorAll('.js-modal-close');
  body = document.querySelector('body'), modalButtons.forEach(function (item) {
    item.addEventListener('click', function (e) {
      e.preventDefault();
      var modalId = this.getAttribute('data-modal'),
        modalElem = document.querySelector('.modal[data-modal="' + modalId + '"]');
      modalElem.classList.add('active');
      overlay.classList.add('active');
      body.style.overflowY = 'hidden';
    }); // end click
  }); // end foreach
  closeButtons.forEach(function (item) {
    item.addEventListener('click', function (e) {
      var parentModal = this.closest('.modal');
      parentModal.classList.remove('active');
      overlay.classList.remove('active');
      body.style.overflowY = '';
    });
  }); // end foreach
  document.body.addEventListener('keyup', function (e) {
    var key = e.keyCode;
    if (key == 27) {
      var modalActive = document.querySelector('.modal.active');
      if (modalActive) {
        document.querySelector('.modal.active').classList.remove('active');
      }
      document.querySelector('.overlay').classList.remove('active');
      body.style.overflowY = '';
    }
    ;
  }, false);
  overlay.addEventListener('click', function () {
    var modalActive = document.querySelector('.modal.active');
    if (modalActive) {
      document.querySelector('.modal.active').classList.remove('active');
    }
    this.classList.remove('active');
    body.style.overflowY = '';
  });
}); // end ready (Модальные окна)

/***/ }),

/***/ "./src/scss/main.scss":
/*!****************************!*\
  !*** ./src/scss/main.scss ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
/*!********************!*\
  !*** ./src/app.js ***!
  \********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _js_generale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./js/generale.js */ "./src/js/generale.js");
/* harmony import */ var _js_generale_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_js_generale_js__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _js_popups_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js/popups.js */ "./src/js/popups.js");
/* harmony import */ var _js_popups_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_js_popups_js__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _js_filtr_generale_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./js/filtr-generale.js */ "./src/js/filtr-generale.js");
/* harmony import */ var _js_filtr_generale_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_js_filtr_generale_js__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _js_filtr_render_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./js/filtr-render.js */ "./src/js/filtr-render.js");
/* harmony import */ var _js_filtr_render_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_js_filtr_render_js__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _scss_main_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! .//scss/main.scss */ "./src/scss/main.scss");




// import './js/main/tabs.js';
// import './js/main/nav.js';

// scss

})();

/******/ })()
;
//# sourceMappingURL=bundle.min.js.map